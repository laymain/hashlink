name: Build HashLink SDK

on:
  push:
    tags:
      - '1.*'
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref (tag/branch/commit) to checkout"
        required: true
        default: "main"

defaults:
  run:
    shell: bash

jobs:
  build-hl-sdk:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Install deps (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y cmake ninja-build libpcre2-dev zlib1g-dev

      - name: Configure
        run: cmake -S . -B build -DWITH_VIDEO=OFF -DWITH_OPENAL=OFF -DWITH_SDL=OFF -DWITH_DIRECTX=OFF -DWITH_METAL=OFF -DWITH_OPENGL=OFF -DWITH_SQLITE=OFF -DWITH_SSL=OFF -DWITH_UI=OFF -DWITH_UV=OFF -DWITH_HEAPS=OFF -DWITH_VM=OFF -DWITH_FMT=OFF -DBUILD_TESTING=OFF

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Package SDK
        run: |
          mkdir sdk
          cp -r include sdk/include
          cp src/hlmodule.h sdk/include
          if [ "${{ runner.os }}" == "Linux" ]; then cp build/src/libhl.so sdk/; fi
          if [ "${{ runner.os }}" == "macOS" ]; then cp build/src/libhl.dylib sdk/; fi
          if [ "${{ runner.os }}" == "Windows" ]; then cp build/src/Release/libhl.dll sdk/ && cp build/src/Release/libhl.lib sdk/; fi
          tar czf hashlink-sdk-${{ runner.os }}.tar.gz sdk

      - uses: actions/upload-artifact@v4
        with:
          name: hashlink-sdk-${{ matrix.os }}
          path: hashlink-sdk-${{ matrix.os }}.tar.gz

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/1.')
        uses: softprops/action-gh-release@v1
        with:
          name: HashLink SDK ${{ github.ref_name }}
          files: hashlink-sdk-${{ runner.os }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
